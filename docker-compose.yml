services:
  proxy-server:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        TARGET: proxy-server
    container_name: proxy-server
    ports:
      - "8000:8000"  # HTTP 요청
      - "9000:9000"  # TCP 요청
    volumes:
      - ./config/proxy-config.json:/app/config.json
      - ./data/proxy:/app/data
    restart: always
    depends_on:
      - server-1
      - server-2
    networks:
      vending-net:
        ipv4_address: 172.28.0.10

  server-1:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        TARGET: server-1
    container_name: server-1
    ports:
      - "9101:9101"
    volumes:
      - ./config/server-1-config.json:/app/config.json
      - ./data/shared-database:/app/data   # SQLite 파일 공유
    restart: always
    hostname: server-1
    cap_add:
      - NET_RAW
      - NET_ADMIN
    networks:
      vending-net:
        ipv4_address: 172.28.0.11

  server-2:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        TARGET: server-2
    container_name: server-2
    ports:
      - "9102:9102"
    volumes:
      - ./config/server-2-config.json:/app/config.json
      - ./data/shared-database:/app/data   # SQLite 파일 공유
    restart: always
    hostname: server-2
    cap_add:
      - NET_RAW
      - NET_ADMIN
    networks:
      vending-net:
        ipv4_address: 172.28.0.12

  backup-server:
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        TARGET: backup-server
    container_name: backup-server
    volumes:
      - ./config/backup-config.json:/app/config.json
      - ./data/backup:/app/data
      - ./internal/storage/schema.sql:/app/schema.sql
    restart: always
    cap_add:
      - NET_RAW
      - NET_ADMIN
    networks:
      vending-net:
        ipv4_address: 172.28.0.13

networks:
  vending-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
